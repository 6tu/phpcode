<?php
# 
# By Devin Doucette
# Copyright (c) 2004 Devin Doucette
# Email: darksnoopy@shaw.ca
# 
# As the name implies, this is an implementation of the CAST128 algorithm. 
# 快速高效 
# 适合加密小文件，不适合大文件 
# 通常把 cookies, session 值加密后用 base64 编码存放 , etc.
# 
# The class itself is fairly simple, as there are only four functions that you would ever 
# need to call.  These are as follows:
include('cast128.php');
# Creating an object is fairly straightforward.
$example = new cast128;
# 
# Set the key using the setkey function:
$example->setkey("Your key, whatever it may be");
# 
# Encrypt data using the encrypt function:
# Takes the data to be encrypted as the first argument, and optionally a key as the second. 
# If no key is provided it will use the last key that was set, either through the encrypt or 
# decrypt functions or through the setkey function.
echo $example->encrypt("This is the text/data to be encrypted");
$example->encrypt("This is the text/data to be encrypted", "MYKEY");
# 
# Decrypt data using the decrypt function:
# Takes the data to be decrypted as the first argument, and optionally a key as the second. 
# If no key is provided it will use the last key that was set, either through the encrypt or 
# decrypt functions or through the setkey function.
# $example->decrypt($data);
# $example->decrypt($data, "MYKEY");
# 
# Run a test to ensure that the script is working properly:
# Uses known values to ensure that the script is able to implement that CAST128 algorithm.
echo $example->test();
# Returns true if it succeeded, false if it failed.
